EN.600.461 Computer Vision
Fall 2016
Homework #3

Name: Joon Hyuck Choi
JHED: jchoi100
email: jchoi100@jhu.edu

Problem 1)
    Note:
        1) Please see p1.py for this problem.
            The code is implemented as a script.
            It can be run either by pasting in the code to a python 
            terminal or by simply typing "python p1.py" in the terminal.

        2) In implementing 1 nearest neighbor search, I used the 
            distance weighted approach. (This is how I kept note of the 
            "votes" before running the 1NN.) The values were normalized.

        3) The bag of words (centers obtained from kmeans function is
           saved with pickle with name 'bag_of_words.p'.)

        4) This code assumes the following directory structure.
                current directory
                    |____ p1.py
                    |____ /train/
                    |        |____ trees
                    |           .
                    |           .
                    |        |____ buildings
                    |____ /test/
                             |____ trees
                                .
                                .
                             |____ buildings    
    Accuracy Results:
        1) k = 800
            accuracy = 66/255 = 0.25

Problem 2)
    Note:
        1) Please see p2.py for this problem.
            The code is implemented as a script.
            It can be run either by pasting in the code to a python 
            terminal or by simply typing "python p2.py" in the terminal.

        2) This code assumes the following directory structure.
                current directory
                    |____ p2.py
                    |____ scene_l.bmp
                    |____ scene_r.bmp

        3) This code outputs the 3d point cloud in text and
           depth image in jpg. (Outputs included in submission folder.)
                - jchoi100_hw3_3d_point_cloud.txt
                - jchoi100_hw3_depth_map.jpg

    Discussion:
        There were great amounts of running time improvements when I used
        some prior: the disparity won't be larger than some fixed number.
        For instance, I used 14 as my "fixed number" and only searched 14
        pixels to the left in the right image for matches.

        Some areas have low texture, so it's harder to match. Also, many
        areas are ambiguous to match. Moreover, the border areas might not
        have any matches at all in the other image.

Problem 3)
    Please see problem3.pdf for this problem.